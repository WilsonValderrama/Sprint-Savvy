/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.aula.sb.model.impl;

import com.aula.sb.model.T_Ul_PrgEvaluacion;
import com.aula.sb.model.T_Ul_PrgEvaluacionModel;
import com.aula.sb.model.T_Ul_PrgEvaluacionSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the T_Ul_PrgEvaluacion service. Represents a row in the &quot;AulaVirtual_T_Ul_PrgEvaluacion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>T_Ul_PrgEvaluacionModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link T_Ul_PrgEvaluacionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see T_Ul_PrgEvaluacionImpl
 * @generated
 */
@JSON(strict = true)
public class T_Ul_PrgEvaluacionModelImpl
	extends BaseModelImpl<T_Ul_PrgEvaluacion>
	implements T_Ul_PrgEvaluacionModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a t_ ul_ prg evaluacion model instance should use the <code>T_Ul_PrgEvaluacion</code> interface instead.
	 */
	public static final String TABLE_NAME = "AulaVirtual_T_Ul_PrgEvaluacion";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"idPreguntas", Types.BIGINT},
		{"problPreguntas", Types.VARCHAR}, {"opcPreguntas", Types.VARCHAR},
		{"puntajePreguntas", Types.VARCHAR},
		{"intentoPreguntas", Types.VARCHAR},
		{"limiteTPreguntas", Types.VARCHAR},
		{"T_Ul_Actividad_id", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("idPreguntas", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("problPreguntas", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("opcPreguntas", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("puntajePreguntas", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("intentoPreguntas", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("limiteTPreguntas", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("T_Ul_Actividad_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table AulaVirtual_T_Ul_PrgEvaluacion (uuid_ VARCHAR(75) null,idPreguntas LONG not null primary key,problPreguntas VARCHAR(75) null,opcPreguntas VARCHAR(75) null,puntajePreguntas VARCHAR(75) null,intentoPreguntas VARCHAR(75) null,limiteTPreguntas VARCHAR(75) null,T_Ul_Actividad_id LONG,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";

	public static final String TABLE_SQL_DROP =
		"drop table AulaVirtual_T_Ul_PrgEvaluacion";

	public static final String ORDER_BY_JPQL =
		" ORDER BY t_Ul_PrgEvaluacion.idPreguntas ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY AulaVirtual_T_Ul_PrgEvaluacion.idPreguntas ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PROBLPREGUNTAS_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long IDPREGUNTAS_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static T_Ul_PrgEvaluacion toModel(T_Ul_PrgEvaluacionSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		T_Ul_PrgEvaluacion model = new T_Ul_PrgEvaluacionImpl();

		model.setUuid(soapModel.getUuid());
		model.setIdPreguntas(soapModel.getIdPreguntas());
		model.setProblPreguntas(soapModel.getProblPreguntas());
		model.setOpcPreguntas(soapModel.getOpcPreguntas());
		model.setPuntajePreguntas(soapModel.getPuntajePreguntas());
		model.setIntentoPreguntas(soapModel.getIntentoPreguntas());
		model.setLimiteTPreguntas(soapModel.getLimiteTPreguntas());
		model.setT_Ul_Actividad_id(soapModel.getT_Ul_Actividad_id());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static List<T_Ul_PrgEvaluacion> toModels(
		T_Ul_PrgEvaluacionSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<T_Ul_PrgEvaluacion> models = new ArrayList<T_Ul_PrgEvaluacion>(
			soapModels.length);

		for (T_Ul_PrgEvaluacionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public T_Ul_PrgEvaluacionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _idPreguntas;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setIdPreguntas(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _idPreguntas;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return T_Ul_PrgEvaluacion.class;
	}

	@Override
	public String getModelClassName() {
		return T_Ul_PrgEvaluacion.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<T_Ul_PrgEvaluacion, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<T_Ul_PrgEvaluacion, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<T_Ul_PrgEvaluacion, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((T_Ul_PrgEvaluacion)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<T_Ul_PrgEvaluacion, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<T_Ul_PrgEvaluacion, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(T_Ul_PrgEvaluacion)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<T_Ul_PrgEvaluacion, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<T_Ul_PrgEvaluacion, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<T_Ul_PrgEvaluacion, Object>>
		_attributeGetterFunctions;

	static {
		Map<String, Function<T_Ul_PrgEvaluacion, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<T_Ul_PrgEvaluacion, Object>>();

		attributeGetterFunctions.put("uuid", T_Ul_PrgEvaluacion::getUuid);
		attributeGetterFunctions.put(
			"idPreguntas", T_Ul_PrgEvaluacion::getIdPreguntas);
		attributeGetterFunctions.put(
			"problPreguntas", T_Ul_PrgEvaluacion::getProblPreguntas);
		attributeGetterFunctions.put(
			"opcPreguntas", T_Ul_PrgEvaluacion::getOpcPreguntas);
		attributeGetterFunctions.put(
			"puntajePreguntas", T_Ul_PrgEvaluacion::getPuntajePreguntas);
		attributeGetterFunctions.put(
			"intentoPreguntas", T_Ul_PrgEvaluacion::getIntentoPreguntas);
		attributeGetterFunctions.put(
			"limiteTPreguntas", T_Ul_PrgEvaluacion::getLimiteTPreguntas);
		attributeGetterFunctions.put(
			"T_Ul_Actividad_id", T_Ul_PrgEvaluacion::getT_Ul_Actividad_id);
		attributeGetterFunctions.put("groupId", T_Ul_PrgEvaluacion::getGroupId);
		attributeGetterFunctions.put(
			"companyId", T_Ul_PrgEvaluacion::getCompanyId);
		attributeGetterFunctions.put("userId", T_Ul_PrgEvaluacion::getUserId);
		attributeGetterFunctions.put(
			"userName", T_Ul_PrgEvaluacion::getUserName);
		attributeGetterFunctions.put(
			"createDate", T_Ul_PrgEvaluacion::getCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", T_Ul_PrgEvaluacion::getModifiedDate);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
	}

	private static final Map<String, BiConsumer<T_Ul_PrgEvaluacion, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, BiConsumer<T_Ul_PrgEvaluacion, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<T_Ul_PrgEvaluacion, ?>>();

		attributeSetterBiConsumers.put(
			"uuid",
			(BiConsumer<T_Ul_PrgEvaluacion, String>)
				T_Ul_PrgEvaluacion::setUuid);
		attributeSetterBiConsumers.put(
			"idPreguntas",
			(BiConsumer<T_Ul_PrgEvaluacion, Long>)
				T_Ul_PrgEvaluacion::setIdPreguntas);
		attributeSetterBiConsumers.put(
			"problPreguntas",
			(BiConsumer<T_Ul_PrgEvaluacion, String>)
				T_Ul_PrgEvaluacion::setProblPreguntas);
		attributeSetterBiConsumers.put(
			"opcPreguntas",
			(BiConsumer<T_Ul_PrgEvaluacion, String>)
				T_Ul_PrgEvaluacion::setOpcPreguntas);
		attributeSetterBiConsumers.put(
			"puntajePreguntas",
			(BiConsumer<T_Ul_PrgEvaluacion, String>)
				T_Ul_PrgEvaluacion::setPuntajePreguntas);
		attributeSetterBiConsumers.put(
			"intentoPreguntas",
			(BiConsumer<T_Ul_PrgEvaluacion, String>)
				T_Ul_PrgEvaluacion::setIntentoPreguntas);
		attributeSetterBiConsumers.put(
			"limiteTPreguntas",
			(BiConsumer<T_Ul_PrgEvaluacion, String>)
				T_Ul_PrgEvaluacion::setLimiteTPreguntas);
		attributeSetterBiConsumers.put(
			"T_Ul_Actividad_id",
			(BiConsumer<T_Ul_PrgEvaluacion, Long>)
				T_Ul_PrgEvaluacion::setT_Ul_Actividad_id);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<T_Ul_PrgEvaluacion, Long>)
				T_Ul_PrgEvaluacion::setGroupId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<T_Ul_PrgEvaluacion, Long>)
				T_Ul_PrgEvaluacion::setCompanyId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<T_Ul_PrgEvaluacion, Long>)
				T_Ul_PrgEvaluacion::setUserId);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<T_Ul_PrgEvaluacion, String>)
				T_Ul_PrgEvaluacion::setUserName);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<T_Ul_PrgEvaluacion, Date>)
				T_Ul_PrgEvaluacion::setCreateDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<T_Ul_PrgEvaluacion, Date>)
				T_Ul_PrgEvaluacion::setModifiedDate);

		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getIdPreguntas() {
		return _idPreguntas;
	}

	@Override
	public void setIdPreguntas(long idPreguntas) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_idPreguntas = idPreguntas;
	}

	@JSON
	@Override
	public String getProblPreguntas() {
		if (_problPreguntas == null) {
			return "";
		}
		else {
			return _problPreguntas;
		}
	}

	@Override
	public void setProblPreguntas(String problPreguntas) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_problPreguntas = problPreguntas;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalProblPreguntas() {
		return getColumnOriginalValue("problPreguntas");
	}

	@JSON
	@Override
	public String getOpcPreguntas() {
		if (_opcPreguntas == null) {
			return "";
		}
		else {
			return _opcPreguntas;
		}
	}

	@Override
	public void setOpcPreguntas(String opcPreguntas) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_opcPreguntas = opcPreguntas;
	}

	@JSON
	@Override
	public String getPuntajePreguntas() {
		if (_puntajePreguntas == null) {
			return "";
		}
		else {
			return _puntajePreguntas;
		}
	}

	@Override
	public void setPuntajePreguntas(String puntajePreguntas) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_puntajePreguntas = puntajePreguntas;
	}

	@JSON
	@Override
	public String getIntentoPreguntas() {
		if (_intentoPreguntas == null) {
			return "";
		}
		else {
			return _intentoPreguntas;
		}
	}

	@Override
	public void setIntentoPreguntas(String intentoPreguntas) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_intentoPreguntas = intentoPreguntas;
	}

	@JSON
	@Override
	public String getLimiteTPreguntas() {
		if (_limiteTPreguntas == null) {
			return "";
		}
		else {
			return _limiteTPreguntas;
		}
	}

	@Override
	public void setLimiteTPreguntas(String limiteTPreguntas) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_limiteTPreguntas = limiteTPreguntas;
	}

	@JSON
	@Override
	public long getT_Ul_Actividad_id() {
		return _T_Ul_Actividad_id;
	}

	@Override
	public void setT_Ul_Actividad_id(long T_Ul_Actividad_id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_T_Ul_Actividad_id = T_Ul_Actividad_id;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(T_Ul_PrgEvaluacion.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), T_Ul_PrgEvaluacion.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public T_Ul_PrgEvaluacion toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, T_Ul_PrgEvaluacion>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		T_Ul_PrgEvaluacionImpl t_Ul_PrgEvaluacionImpl =
			new T_Ul_PrgEvaluacionImpl();

		t_Ul_PrgEvaluacionImpl.setUuid(getUuid());
		t_Ul_PrgEvaluacionImpl.setIdPreguntas(getIdPreguntas());
		t_Ul_PrgEvaluacionImpl.setProblPreguntas(getProblPreguntas());
		t_Ul_PrgEvaluacionImpl.setOpcPreguntas(getOpcPreguntas());
		t_Ul_PrgEvaluacionImpl.setPuntajePreguntas(getPuntajePreguntas());
		t_Ul_PrgEvaluacionImpl.setIntentoPreguntas(getIntentoPreguntas());
		t_Ul_PrgEvaluacionImpl.setLimiteTPreguntas(getLimiteTPreguntas());
		t_Ul_PrgEvaluacionImpl.setT_Ul_Actividad_id(getT_Ul_Actividad_id());
		t_Ul_PrgEvaluacionImpl.setGroupId(getGroupId());
		t_Ul_PrgEvaluacionImpl.setCompanyId(getCompanyId());
		t_Ul_PrgEvaluacionImpl.setUserId(getUserId());
		t_Ul_PrgEvaluacionImpl.setUserName(getUserName());
		t_Ul_PrgEvaluacionImpl.setCreateDate(getCreateDate());
		t_Ul_PrgEvaluacionImpl.setModifiedDate(getModifiedDate());

		t_Ul_PrgEvaluacionImpl.resetOriginalValues();

		return t_Ul_PrgEvaluacionImpl;
	}

	@Override
	public int compareTo(T_Ul_PrgEvaluacion t_Ul_PrgEvaluacion) {
		int value = 0;

		if (getIdPreguntas() < t_Ul_PrgEvaluacion.getIdPreguntas()) {
			value = -1;
		}
		else if (getIdPreguntas() > t_Ul_PrgEvaluacion.getIdPreguntas()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof T_Ul_PrgEvaluacion)) {
			return false;
		}

		T_Ul_PrgEvaluacion t_Ul_PrgEvaluacion = (T_Ul_PrgEvaluacion)object;

		long primaryKey = t_Ul_PrgEvaluacion.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<T_Ul_PrgEvaluacion> toCacheModel() {
		T_Ul_PrgEvaluacionCacheModel t_Ul_PrgEvaluacionCacheModel =
			new T_Ul_PrgEvaluacionCacheModel();

		t_Ul_PrgEvaluacionCacheModel.uuid = getUuid();

		String uuid = t_Ul_PrgEvaluacionCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			t_Ul_PrgEvaluacionCacheModel.uuid = null;
		}

		t_Ul_PrgEvaluacionCacheModel.idPreguntas = getIdPreguntas();

		t_Ul_PrgEvaluacionCacheModel.problPreguntas = getProblPreguntas();

		String problPreguntas = t_Ul_PrgEvaluacionCacheModel.problPreguntas;

		if ((problPreguntas != null) && (problPreguntas.length() == 0)) {
			t_Ul_PrgEvaluacionCacheModel.problPreguntas = null;
		}

		t_Ul_PrgEvaluacionCacheModel.opcPreguntas = getOpcPreguntas();

		String opcPreguntas = t_Ul_PrgEvaluacionCacheModel.opcPreguntas;

		if ((opcPreguntas != null) && (opcPreguntas.length() == 0)) {
			t_Ul_PrgEvaluacionCacheModel.opcPreguntas = null;
		}

		t_Ul_PrgEvaluacionCacheModel.puntajePreguntas = getPuntajePreguntas();

		String puntajePreguntas = t_Ul_PrgEvaluacionCacheModel.puntajePreguntas;

		if ((puntajePreguntas != null) && (puntajePreguntas.length() == 0)) {
			t_Ul_PrgEvaluacionCacheModel.puntajePreguntas = null;
		}

		t_Ul_PrgEvaluacionCacheModel.intentoPreguntas = getIntentoPreguntas();

		String intentoPreguntas = t_Ul_PrgEvaluacionCacheModel.intentoPreguntas;

		if ((intentoPreguntas != null) && (intentoPreguntas.length() == 0)) {
			t_Ul_PrgEvaluacionCacheModel.intentoPreguntas = null;
		}

		t_Ul_PrgEvaluacionCacheModel.limiteTPreguntas = getLimiteTPreguntas();

		String limiteTPreguntas = t_Ul_PrgEvaluacionCacheModel.limiteTPreguntas;

		if ((limiteTPreguntas != null) && (limiteTPreguntas.length() == 0)) {
			t_Ul_PrgEvaluacionCacheModel.limiteTPreguntas = null;
		}

		t_Ul_PrgEvaluacionCacheModel.T_Ul_Actividad_id = getT_Ul_Actividad_id();

		t_Ul_PrgEvaluacionCacheModel.groupId = getGroupId();

		t_Ul_PrgEvaluacionCacheModel.companyId = getCompanyId();

		t_Ul_PrgEvaluacionCacheModel.userId = getUserId();

		t_Ul_PrgEvaluacionCacheModel.userName = getUserName();

		String userName = t_Ul_PrgEvaluacionCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			t_Ul_PrgEvaluacionCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			t_Ul_PrgEvaluacionCacheModel.createDate = createDate.getTime();
		}
		else {
			t_Ul_PrgEvaluacionCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			t_Ul_PrgEvaluacionCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			t_Ul_PrgEvaluacionCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return t_Ul_PrgEvaluacionCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<T_Ul_PrgEvaluacion, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<T_Ul_PrgEvaluacion, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<T_Ul_PrgEvaluacion, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(T_Ul_PrgEvaluacion)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<T_Ul_PrgEvaluacion, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<T_Ul_PrgEvaluacion, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<T_Ul_PrgEvaluacion, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((T_Ul_PrgEvaluacion)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, T_Ul_PrgEvaluacion>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					T_Ul_PrgEvaluacion.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _idPreguntas;
	private String _problPreguntas;
	private String _opcPreguntas;
	private String _puntajePreguntas;
	private String _intentoPreguntas;
	private String _limiteTPreguntas;
	private long _T_Ul_Actividad_id;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<T_Ul_PrgEvaluacion, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((T_Ul_PrgEvaluacion)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("idPreguntas", _idPreguntas);
		_columnOriginalValues.put("problPreguntas", _problPreguntas);
		_columnOriginalValues.put("opcPreguntas", _opcPreguntas);
		_columnOriginalValues.put("puntajePreguntas", _puntajePreguntas);
		_columnOriginalValues.put("intentoPreguntas", _intentoPreguntas);
		_columnOriginalValues.put("limiteTPreguntas", _limiteTPreguntas);
		_columnOriginalValues.put("T_Ul_Actividad_id", _T_Ul_Actividad_id);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("idPreguntas", 2L);

		columnBitmasks.put("problPreguntas", 4L);

		columnBitmasks.put("opcPreguntas", 8L);

		columnBitmasks.put("puntajePreguntas", 16L);

		columnBitmasks.put("intentoPreguntas", 32L);

		columnBitmasks.put("limiteTPreguntas", 64L);

		columnBitmasks.put("T_Ul_Actividad_id", 128L);

		columnBitmasks.put("groupId", 256L);

		columnBitmasks.put("companyId", 512L);

		columnBitmasks.put("userId", 1024L);

		columnBitmasks.put("userName", 2048L);

		columnBitmasks.put("createDate", 4096L);

		columnBitmasks.put("modifiedDate", 8192L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private T_Ul_PrgEvaluacion _escapedModel;

}